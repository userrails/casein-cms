# Scaffolding generated by Casein v5.0.1.0

module Casein
  class ContactsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Contacts'
  		@contacts = Contact.order(sort_order(:address)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View contact'
      @contact = Contact.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new contact'
    	@contact = Contact.new
    end

    def create
      @contact = Contact.new contact_params
    
      if @contact.save
        flash[:notice] = 'Contact created'
        redirect_to casein_contacts_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new contact'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update contact'
      
      @contact = Contact.find params[:id]
    
      if @contact.update_attributes contact_params
        flash[:notice] = 'Contact has been updated'
        redirect_to casein_contacts_path
      else
        flash.now[:warning] = 'There were problems when trying to update this contact'
        render :action => :show
      end
    end
 
    def destroy
      @contact = Contact.find params[:id]

      @contact.destroy
      flash[:notice] = 'Contact has been deleted'
      redirect_to casein_contacts_path
    end
  
    private
      
      def contact_params
        params.require(:contact).permit(:address, :zipcode, :lat, :lng)
      end

  end
end